<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Curves on Curves Documentation</title>
    <link>http://example.com/</link>
    <description>Recent content in Curves on Curves Documentation</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 02 Sep 2020 17:21:15 -0400</lastBuildDate>
    
	<atom:link href="http://example.com/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Noise</title>
      <link>http://example.com/curvemodifier/noise/</link>
      <pubDate>Wed, 02 Sep 2020 17:21:15 -0400</pubDate>
      
      <guid>http://example.com/curvemodifier/noise/</guid>
      <description>The Noise modifier randomly modifies the output of the curve by adding simplex noise.
Types  Number List RGBColor HSVColor Vector3 Boolean  Constructor new Noise (  amplitude: number,  frequency: number,  seed: number = 0,  rangeStart: number | undefined = undefined,  rangeEnd: number | undefined = undefined, ) amplitude: The amplitude of the simplex noise.
frequency: The frequency of the simplex noise.
seed: The seed used to generate the simplex noise.</description>
    </item>
    
    <item>
      <title>Clamp</title>
      <link>http://example.com/curvemodifier/clamp/</link>
      <pubDate>Wed, 02 Sep 2020 17:21:15 -0400</pubDate>
      
      <guid>http://example.com/curvemodifier/clamp/</guid>
      <description>The Clamp modifier clamps the evaluated value of the curve between a minimum and maximum value.
Types  Number List RGBColor HSVColor Vector3  Constructor new Clamp (  min:[Type],  max:[Type],  rangeStart: number | undefined = undefined,  rangeEnd: number | undefined = undefined, ) min: The minimum return value of the modifier.
max: The maximum return value of the modifier.
rangeStart: The time at which the modifier begins to modify the curve.</description>
    </item>
    
    <item>
      <title>Sine</title>
      <link>http://example.com/curvemodifier/sine/</link>
      <pubDate>Wed, 02 Sep 2020 17:21:15 -0400</pubDate>
      
      <guid>http://example.com/curvemodifier/sine/</guid>
      <description>The Sine modifier uses a sine wave to modify the output of the curve.
Types  Number List RGBColor HSVColor Vector3 Boolean  Constructor new Sine (  blendMode: SineModifierBlendMode,  amplitude: number,  wavelength: number,  phaseOffset: number,  rangeStart: number | undefined = undefined,  rangeEnd: number | undefined = undefined, ) blendMode: The manner in which the sine wave will modify the curve.
amplitude: The amplitude of the sine wave.</description>
    </item>
    
    <item>
      <title>Step</title>
      <link>http://example.com/curvemodifier/step/</link>
      <pubDate>Wed, 02 Sep 2020 17:21:15 -0400</pubDate>
      
      <guid>http://example.com/curvemodifier/step/</guid>
      <description>The Step modifier transforms the curve into a step function.
Types  Number List RGBColor HSVColor Vector3  Constructor new Step (  stepLength: number,  rangeStart: number | undefined = undefined,  rangeEnd: number | undefined = undefined, ) stepLength: The vertical distance between each step.
rangeStart: The time at which the modifier begins to modify the curve.
rangeEnd: The time at which the modifier no longer modifies the curve.</description>
    </item>
    
    <item>
      <title>Cycles</title>
      <link>http://example.com/curvemodifier/cycles/</link>
      <pubDate>Wed, 02 Sep 2020 17:21:15 -0400</pubDate>
      
      <guid>http://example.com/curvemodifier/cycles/</guid>
      <description>The Cycles modifier samples a defined portion of the curve and loops it throughout the modifier&amp;rsquo;s range.
Types  Any  Constructor new Cycles&amp;lt;T&amp;gt; (  startTime: number,  endTime: number,  rangeStart: number | undefined = undefined,  rangeEnd: number | undefined = undefined, ) startTime: The beginning time of the range from which the curve will be sampled for the loop.
endTime: The ending time of the range from which the curve will be sampled for the loop.</description>
    </item>
    
    <item>
      <title>Typed Keyframes</title>
      <link>http://example.com/keyframe/typedkeyframes/</link>
      <pubDate>Sun, 06 Sep 2020 04:45:10 -0400</pubDate>
      
      <guid>http://example.com/keyframe/typedkeyframes/</guid>
      <description>There are a number of built in subclasses of the Keyframe class for primitive types and data structures.
 Number Keyframe new NumberKeyframe (time: number, value: number, inEasing: Easing = Easing.cubic, outEasing: Easing | undefined = undefined) The NumberKeyframe class interpolates between number values.
 String Keyframe new StringKeyframe (time: number, value: string, inEasing: Easing = Easing.cubic, outEasing: Easing | undefined = undefined) The StringKeyframe class interpolates between string values.</description>
    </item>
    
    <item>
      <title>Aggregate</title>
      <link>http://example.com/curvemodifier/object/aggregate/</link>
      <pubDate>Wed, 02 Sep 2020 17:21:15 -0400</pubDate>
      
      <guid>http://example.com/curvemodifier/object/aggregate/</guid>
      <description>The Aggregate modifier stores a list of modifiers for each type. Each value of each key will have the list of modifiers corresponding to its type applied to it.
Types  Object  Aggregate Elements type AggregateElements = {  number?: CurveModifier&amp;lt;number&amp;gt;[],  boolean?: CurveModifier&amp;lt;boolean&amp;gt;[],  string?: CurveModifier&amp;lt;string&amp;gt;[],  list?: CurveModifier&amp;lt;number[]&amp;gt;[],  color?: CurveModifier&amp;lt;RGBColor&amp;gt;[] } An AggregateElements object contains a list of modifiers to be applied for each type.</description>
    </item>
    
    <item>
      <title>Builders</title>
      <link>http://example.com/curve/builders/</link>
      <pubDate>Wed, 02 Sep 2020 17:21:15 -0400</pubDate>
      
      <guid>http://example.com/curve/builders/</guid>
      <description>The Curve class contains static methods that facilitate the creation of simple curves. A curve generated by a builder contains only two keyframes.
Generic Builder static builder &amp;lt;T&amp;gt; (  KeyframeType: new (time: number, value: T, easing: Easing) =&amp;gt; Keyframe&amp;lt;T&amp;gt;,  inValue: T,  outValue: T,  duration = 1,  easing = eaz.Easing.cubic, ): Curve&amp;lt;T&amp;gt; KeyframeType: The constructor of the Keyframe type to be used in the generated curve.</description>
    </item>
    
    <item>
      <title>End Behavior</title>
      <link>http://example.com/curve/endbehavior/</link>
      <pubDate>Wed, 02 Sep 2020 17:21:15 -0400</pubDate>
      
      <guid>http://example.com/curve/endbehavior/</guid>
      <description>The EndBehavior enum is used to define the behavior of a curve beyond its final keyframe. The value returned by Curve.evaluate when time &amp;gt; curve.endTime or time &amp;lt; curve.startTime is determined by the curve&amp;rsquo;s EndBehavior.
Clamp The Clamp behavior is the default EndBehavior value for a curve. A curve using the Clamp behavior will return the value of the first keyframe when time &amp;lt; curve.startTime and the value of the last keyframe when time &amp;gt; curve.</description>
    </item>
    
    <item>
      <title>Exclude</title>
      <link>http://example.com/curvemodifier/string/exclude/</link>
      <pubDate>Wed, 02 Sep 2020 17:21:15 -0400</pubDate>
      
      <guid>http://example.com/curvemodifier/string/exclude/</guid>
      <description>The Exclude modifier excludes blacklisted characters from the string, or only includes whitelisted characters.
Types  String  Constructor new Exclude (  blacklist: string[],  useWhitelist = false,  clamp = true,  rangeStart: number | undefined = undefined,  rangeEnd: number | undefined = undefined, ) blacklist: The list of characters to be excluded from the returned string.
useWhitelist: Whether or not the blacklist should be treated as a whitelist instead.</description>
    </item>
    
    <item>
      <title>Ranges</title>
      <link>http://example.com/curvemodifier/string/ranges/</link>
      <pubDate>Wed, 02 Sep 2020 17:21:15 -0400</pubDate>
      
      <guid>http://example.com/curvemodifier/string/ranges/</guid>
      <description>The Ranges modifier allows only values within the given ranges of characters. Each range is represented by a minimum character code and a maximum character code.
Types  String  Constructor new Ranges (  ranges: { min: number, max: number }[] = Ranges.AlphaNumeric,  clamp = true,  allowKeyframeValues = true,  rangeStart: number | undefined = undefined,  rangeEnd: number | undefined = undefined, ) ranges: The list of ranges within which characters are allowed.</description>
    </item>
    
  </channel>
</rss>
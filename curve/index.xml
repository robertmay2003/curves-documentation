<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Curve on Curves Documentation</title>
    <link>https://robertzmay.com/curves-documentation/curve/</link>
    <description>Recent content in Curve on Curves Documentation</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 02 Sep 2020 17:21:15 -0400</lastBuildDate>
    
	<atom:link href="https://robertzmay.com/curves-documentation/curve/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Builders</title>
      <link>https://robertzmay.com/curves-documentation/curve/builders/</link>
      <pubDate>Wed, 02 Sep 2020 17:21:15 -0400</pubDate>
      
      <guid>https://robertzmay.com/curves-documentation/curve/builders/</guid>
      <description>The Curve class contains static methods that facilitate the creation of simple curves. A curve generated by a builder contains only two keyframes.
Generic Builder static builder &amp;lt;T&amp;gt; (  KeyframeType: new (time: number, value: T, easing: Easing) =&amp;gt; Keyframe&amp;lt;T&amp;gt;,  inValue: T,  outValue: T,  duration = 1,  easing = eaz.Easing.cubic, ): Curve&amp;lt;T&amp;gt; KeyframeType: The constructor of the Keyframe type to be used in the generated curve.</description>
    </item>
    
    <item>
      <title>End Behavior</title>
      <link>https://robertzmay.com/curves-documentation/curve/endbehavior/</link>
      <pubDate>Wed, 02 Sep 2020 17:21:15 -0400</pubDate>
      
      <guid>https://robertzmay.com/curves-documentation/curve/endbehavior/</guid>
      <description>The EndBehavior enum is used to define the behavior of a curve beyond its final keyframe. The value returned by Curve.evaluate when time &amp;gt; curve.endTime or time &amp;lt; curve.startTime is determined by the curve&amp;rsquo;s EndBehavior.
Clamp The Clamp behavior is the default EndBehavior value for a curve. A curve using the Clamp behavior will return the value of the first keyframe when time &amp;lt; curve.startTime and the value of the last keyframe when time &amp;gt; curve.</description>
    </item>
    
  </channel>
</rss>